<?php

/**
 * @file
 * DropShark installation code.
 */

use Drupal\Core\Url;

/**
 * Implements hook_schema().
 */
function dropshark_schema() {
  $schema['dropshark_queue'] = [
    'description' => 'Data queued for submission to the DropShark service.',
    'fields' => [
      'created' => [
        'description' => 'Timestamp of when the item was added to the queue.',
        'type' => 'int',
        'not null' => TRUE,
      ],
      'lock_id' => [
        'description' => 'Lock ID.',
        'type' => 'varchar',
        'length' => '255',
        'not null' => FALSE,
      ],
      'lock_time' => [
        'description' => 'Lock time.',
        'type' => 'int',
        'not null' => FALSE,
      ],
      'data' => [
        'description' => 'JSON-encoded data.',
        'type' => 'blob',
        'not null' => TRUE,
      ],
    ],
    'indexes' => [
      'created' => ['created'],
      'lock_id' => ['lock_id'],
      'lock_time' => ['lock_time'],
    ],
  ];

  return $schema;
}

/**
 * Implements hook_requirements().
 */
function dropshark_requirements($phase) {
  $requirements = [];

  if ($phase == 'runtime') {
    if (!\Drupal::state()->get('dropshark.site_token')) {
      $requirements['dropshark_register']['title'] = t('DropShark registration');
      $requirements['dropshark_register']['value'] = t('Not registered');
      $requirements['dropshark_register']['severity'] = REQUIREMENT_ERROR;
      $params = [
        ':link' => Url::fromRoute('dropshark.admin_settings')->toString(),
      ];
      $requirements['dropshark_register']['description'] = t('Information collected from your site cannot be submitted to DropShark. Please <a href=":link">register</a> your site to utilize DropShark.', $params);
    }
    else {
      /** @var \Drupal\dropshark\Request\Request $r */
      $r = \Drupal::getContainer()->get('dropshark.request');
      $result = $r->checkToken();

      if (empty($result->data->site_id)) {
        $requirements['dropshark_connection']['title'] = t('DropShark connection');
        $requirements['dropshark_connection']['value'] = t('Unable to connect');
        $requirements['dropshark_connection']['severity'] = REQUIREMENT_ERROR;
        $params = [
          ':link' => Url::fromRoute('dropshark.admin_settings')->toString(),
        ];
        $requirements['dropshark_connection']['description'] = t('Information collected from your site cannot be submitted to DropShark. Please check your DropShark <a href=":link">configuration</a>.', $params);
      }
      else {
        $requirements['dropshark']['title'] = t('DropShark');
        $requirements['dropshark']['value'] = t('Your site is successfully communicating with DropShark.');
        $requirements['dropshark']['severity'] = REQUIREMENT_OK;
      }
    }

    $requirements['dropshark_linfo']['title'] = t('Linfo PHP library');
    /** @var \Linfo\Linfo|false $linfo */
    $linfo = \Drupal::service('dropshark.linfo_factory')->createInstance();
    if ($linfo) {
      $requirements['dropshark_linfo']['value'] = t('Installed: %version', ['%version' => $linfo->getVersion()]);
      $requirements['dropshark_linfo']['severity'] = REQUIREMENT_OK;
    }
    else {
      $requirements['dropshark_linfo']['value'] = t('Not found');
      $requirements['dropshark_linfo']['severity'] = REQUIREMENT_WARNING;
      $requirements['dropshark_linfo']['description'] = t('The DropShark module needs the Linfo library in order to collect system data.');
    }
  }

  return $requirements;
}
